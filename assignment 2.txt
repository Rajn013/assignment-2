QUE 1. 1.What are the two values of the Boolean data type? How do you write them?

ANS. The two values of the Boolean data type are "true" and "false". They are typically written as "true" or "false" or as 1 or 0, where 1 represents true and 0 represents false.

QUE 2. What are the three different types of Boolean operators?
 
ANS. There are 3 different types of boolean operators 
         "AND" "OR" "NOT" 
que 3. Make a list of each Boolean operator&#39;s truth tables (i.e. every possible combination of Boolean
values for the operator and what it evaluate ).

ans. the truth table for each boolean operator:

     "AND" Operator:

  True AND True = True
  True AND False = False
  False AND True = False
  False AND False = False
  "OR" Operator:

  True OR True = True
  True OR False = True
  False OR True = True
  False OR False = False 
  "NOT" Operator:

  NOT True = False
  NOT False = True

que 4.  What are the values of the following expressions?

ans.  (5 > 4) and (3 == 5) => False
      not (5 > 4) => False
      (5 > 4) or (3 == 5) => True
      not ((5 > 4) or (3 == 5)) => False
      (True and True) and (True == False) => False
      (not False) or (not True) => True

que 5. What are the six comparison operators?

ans   Equal to (==)
      Not equal to (!=)
      Greater than (>)
      Less than (<)
      Greater than or equal to (>=)
      Less than or equal to (<=) 

que 6.  How do you tell the difference between the equal to and assignment operators?Describe a condition and when you would use one.

ans . The equal to operator (==) is used to compare two values and returns true if they are equal, while the assignment operator (=) is used to assign a value to a variable.

      To differentiate between these operators, it's important to understand the context in which they are used. In an expression, if two values are being compared for equality, the equal to operator (==) should be used. For example, if x == y: would check if the value of x is equal to the value of y.

que 7. Identify the three blocks in this code:
       spam = 0
       if spam == 10:
       print('eggs')
       if spam > 5:
       print('bacon')
       else:
       print('ham')
       print('spam')
       print('spam')


ans .  1 block 

        spam = 0
        if spam == 10:
        print('eggs')


       2 block
    
       if spam > 5:
       print('bacon')
       else:
       print('ham')

       3. block

        print('spam')
        print('spam')

que 8. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.

ans . if spam == 1:
       print("Hello")
       elif spam == 2:
       print("Howdy")
       else:
       print("Greetings!")

que 9. If your programme is stuck in an endless loop, what keys youâ€™ll press?

ans.  To stop a program stuck in an endless loop, you can press the "Ctrl" + "C" keys 

que 10. How can you tell the difference between break and continue?

ans . "break" is a keyword in programming that terminates a loop completely, while "continue" is a keyword that skips the current iteration of a loop and moves on to the next iteration.

que 11. In a for loop, what is the difference between range(10), range(0, 10), and range(0, 10, 1)?

ans. there is no difference between range(10), range(0, 10), and range(0, 10, 1) in terms of the output they produce. They all generate a sequence of numbers from 0 to 9 (inclusive), with a step size of 1.

que 12. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop.

ans .                           i = 1
                                while i <= 10:
                                    print(i)
                                    i += 1

que 13 . If you had a function named bacon() inside a module named spam, how would you call it after importing spam?

ans . import spam

      spam.bacon()
